name: Build, Pack, and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x  # Adjust to your project's .NET version

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src  # Set the working directory to 'src'

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: src  # Set the working directory to 'src'

      - name: List
        run: ls

      - name: List Tests
        run: ls tests

      - name: Test
        run: dotnet test --configuration Release --no-restore
        working-directory: tests/AJL.Tests  # Set the working directory to 'src'

      - name: Auto-increment Version
        id: auto_increment_version
        run: |
          # Get the current version from the csproj file
          csprojPath="src/AJL/AJL.csproj"  # Update with your actual csproj file path
          currentVersion=$(xmllint --xpath 'string(/Project/PropertyGroup/Version)' $csprojPath)
    
          # Split the version into major, minor, and patch components
          IFS='.' read -ra versionComponents <<< "$currentVersion"
          major="${versionComponents[0]}"
          minor="${versionComponents[1]}"
          patch="${versionComponents[2]}"
    
          # Increment the patch version by 1
          ((patch++))
    
          # Update the csproj file with the new version
          newVersion="$major.$minor.$patch"
          xmlstarlet ed --inplace -u "/Project/PropertyGroup/Version" -v "$newVersion" $csprojPath
    
          # Output the new version
          echo "::set-output name=new_version::$newVersion"
        shell: bash
        env:
          DOTNET_ROOT: /home/runner/.dotnet

      - name: Pack
        run: dotnet pack --configuration Release --no-build --output ./artifacts
        working-directory: src  # Set the working directory to 'src'

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./src/artifacts/*.nupkg
          tag_name: ${{ steps.auto_increment_version.outputs.new_version }}  # Use the new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
