name: Build, Pack, and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install xmllint
        run: sudo apt-get install libxml2-utils

      - name: Increment Patch Version
        id: increment_version
        run: |
          csprojPath="src/AJL/AJL.csproj"
          currentVersion=$(xmllint --xpath 'string(/Project/PropertyGroup/Version)' $csprojPath)
          IFS='-' read -ra versionComponents <<< "$currentVersion"
          versionWithoutSuffix="${versionComponents[0]}"
          IFS='.' read -ra versionParts <<< "$versionWithoutSuffix"
          major="${versionParts[0]}"
          minor="${versionParts[1]}"
          patch="${versionParts[2]}"
          ((patch++))
          newVersion="$major.$minor.$patch-$(VersionSuffix)"
          sed -i "s/<Version>.*<\/Version>/<Version>$newVersion<\/Version>/" $csprojPath

          # Debugging output
          echo "New Version: $newVersion"
          echo "Updated csproj content:"
          cat $csprojPath

          echo "::set-output name=version::$newVersion"
          shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}

      - name: Set Version Suffix
        id: set_version_suffix
        run: echo "VersionSuffix=beta$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        shell: bash

      - name: Commit and push version increment
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "Auto-increment version to ${{ steps.increment_version.outputs.version }}"
          git push

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x  # Adjust to your project's .NET version

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src  # Set the working directory to 'src'

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: src  # Set the working directory to 'src'

      - name: Test
        run: dotnet test --configuration Release --no-restore
        working-directory: tests/AJL.Tests  # Set the working directory to 'tests/AJL.Tests'

      - name: Pack
        run: dotnet pack --configuration Release --no-build --output ./artifacts
        working-directory: src  # Set the working directory to 'src'

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./src/artifacts/*.nupkg
          tag_name: ${{ steps.increment_version.outputs.version }}  # Use the new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
